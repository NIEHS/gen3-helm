# Default values for audit.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  dev: true
  postgres:
    db_create: true
    master:
      host:
      username: postgres
      password:
      port: "5432"
  environment: default
  hostname: localhost
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  portalApp: gitops
  kubeBucket: kube-gen3
  logsBucket: logs-gen3
  syncFromDbgap: false
  userYamlS3Path: s3://cdis-gen3-users/test/user.yaml
  publicDataSets: true
  tierAccessLevel: libre
  netPolicy: true
  dispatcherJobNum: 10
  ddEnabled: false

postgres:
  db_create:
  # If db does not exist in postgres cluster and db_creation is set ot true then these databases will be created for you
  database: audit
  username: audit
  host:
  port: "5432"
  # If left empty password will be auto-generated
  password: 

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: 
    #This will need to be updated with the actual role ARN 
    eks.amazonaws.com/role-arn: ROLE_ARN
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "audit-service-sa"

resources: 
  requests: 
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 500m
    memory: 1024Mi

labels: 
  app: audit
  release: production
  # for network policy selectors
  authprovider: "yes"
  # uses explicit proxy and AWS APIs
  netnolimit: "yes"
  public: "yes"
  userhelper: "yes"
  tags.datadoghq.com/service: "audit"

selectorLabels:
  app: audit

#These are settings to control the audit service itself. 
server:
  pull_from_queue: false
  debug: false
  
  sqs:
    #The URL of the SQS queue that audit will use. This needs to be updated before deployment. 
    url: "http://sqs.com"
    region: "us-east-1"
