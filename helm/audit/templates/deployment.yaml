apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit-deployment
  labels:
    {{- include "audit.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "audit.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "audit.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "audit.serviceAccountName" . }}
      volumes:
      - name: config-volume
        secret:
          secretName: "audit-g3auto"
      containers:
        - name: audit
          image: "quay.io/cdis/audit-service:{{ .Chart.AppVersion }}"
          imagePullPolicy: Always
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /_status
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /_status
              port: 80
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: DEBUG
              value: "false"
            - name: ARBORIST_URL
              valueFrom:
                configMapKeyRef:
                  name: manifest-global
                  key: arborist_url
        optional: true
          volumeMounts:
            - name: "config-volume"
              readOnly: true
              mountPath: "/src/audit-service-config.yaml"
              subPath: "audit-service-config.yaml" 
      initContainers:
        - name: audit-init
          image: "quay.io/cdis/audit-service:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: host
                  optional: false  
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: username
                  optional: false 
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: password
                  optional: false
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: audit-dbcreds
                  key: database
                  optional: false
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: ["/bin/bash"]
          args:
            - "-c"
            - |
              /env/bin/alembic upgrade head
          volumeMounts:
            - name: "config-volume"
            readOnly: true
            mountPath: "/src/audit-service-config.yaml"
            subPath: "audit-service-config.yaml" 
      affinity:
        podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - audit
            topologyKey: "kubernetes.io/hostname"