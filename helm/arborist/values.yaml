# Default values for arborist.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  dev: true
  postgres:
    dbCreate: true
    master:
      host:
      username: postgres
      password:
      port: "5432"
  environment: default
  hostname: localhost
  revproxyArn: arn:aws:acm:us-east-1:123456:certificate
  dictionaryUrl: https://s3.amazonaws.com/dictionary-artifacts/datadictionary/develop/schema.json
  portalApp: gitops
  kubeBucket: kube-gen3
  logsBucket: logs-gen3
  syncFromDbgap: false
  userYamlS3Path: s3://cdis-gen3-users/test/user.yaml
  publicDataSets: true
  tierAccessLevel: libre
  netPolicy: true
  dispatcherJobNum: 10
  ddEnabled: false

postgres:
  dbCreate:
  host:
  # If db does not exist in postgres cluster and db_creation is set ot true then these databases will be created for you
  database: arborist
  username: arborist
  port: "5432"
  # If left empty password will be auto-generated
  password:


replicaCount: 1

image:
  repository: quay.io/cdis/arborist
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

resources:
  requests:
    cpu: 0.1
    memory: 12Mi
  limits:
    cpu: 1.0
    memory: 512Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


volumes:
- name: creds-volume
  secret:
    secretName: "arborist-dbcreds"


volumeMounts:
# TODO: REMOVE?

env:
# TODO: Revisit this?
- name: JWKS_ENDPOINT
  value: "http://fence-service/.well-known/jwks"
- name: PGPASSWORD
  valueFrom:
    secretKeyRef:
      name: arborist-dbcreds
      key: password
      optional: false
- name: PGUSER
  valueFrom:
    secretKeyRef:
      name: arborist-dbcreds
      key: username
      optional: false
- name: PGDATABASE
  valueFrom:
    secretKeyRef:
      name: arborist-dbcreds
      key: database
      optional: false
- name: PGHOST
  valueFrom:
    secretKeyRef:
      name: arborist-dbcreds
      key: host
      optional: false
- name: PGPORT
  valueFrom:
    secretKeyRef:
      name: arborist-dbcreds
      key: port
      optional: false
- name: PGSSLMODE
  value: disable
- name: DBREADY
  valueFrom:
    secretKeyRef:
      name: arborist-dbcreds
      key: dbcreated
      optional: false
