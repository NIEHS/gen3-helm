apiVersion: apps/v1
kind: Deployment
metadata:
  name: manifestservice-deployment
spec:
  selector:
      {{- with .Values.selectorLabels }}
      matchLabels:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      {{- with .Values.labels }}
      labels:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.selectorLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      affinity:
        podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - manifestservice
            topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken}}
      volumes:
        - name: config-volume
          secret:
            secretName: "manifestservice-g3auto"
      terminationGracePeriodSeconds: 50
      containers:
        - name: manifestservice
          image: "quay.io/cdis/manifestservice:2022.09"
          imagePullPolicy: Always
          env:
            - name: REQUESTS_CA_BUNDLE
              value: /etc/ssl/certs/ca-certificates.crt
            - name: MANIFEST_SERVICE_CONFIG_PATH
              value: /var/gen3/config/config.json
            - name: GEN3_DEBUG
              value: "False"
          volumeMounts:
            - name: "config-volume"
              readOnly: true
              mountPath: "/var/gen3/config/"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          ports:
            - containerPort: 80
          livenessProbe:
            httpGet:
              path: /_status
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /_status
              port: 80
