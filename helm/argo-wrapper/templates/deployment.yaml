apiVersion: apps/v1
kind: Deployment
metadata:
  name: argo-wrapper-deployment
  annotations:
    gen3.io/network-ingress: "argo-wrapper"
  labels:
    {{- include "argo-wrapper.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "argo-wrapper.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        # gen3 networkpolicy labels
        netnolimit: 'yes'
        public: 'yes'
      {{- if eq (include "argo-wrapper.ddEnabled" . ) "true" }}
        tags.datadoghq.com/service: "argo-wrapper"
        # TODO: move this to helpers so we can have this populated from a configmap
        tags.datadoghq.com/env: {{ .Values.dataDog.env }}
        tags.datadoghq.com/version: {{ .Values.image.tag | default .Chart.AppVersion }}
      {{- end }}
        {{- include "argo-wrapper.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - argo-wrapper
            topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: argo-config
          configMap:
            name: manifest-argo
            items:
              - key: argo.json
                path: argo.json
      containers:
        - name: {{ .Chart.Name }}
          image: "quay.io/cdis/argo-wrapper:{{ .Chart.AppVersion }}"
          livenessProbe:
            httpGet:
              path: /test
              port: 8000
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: argo-config
              readOnly: true
              mountPath: /argo.json
              subPath: argo.json
          resources:
            {{- toYaml .Values.resources | nindent 12 }}