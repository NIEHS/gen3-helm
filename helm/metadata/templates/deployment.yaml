apiVersion: apps/v1
kind: Deployment
metadata:
  name: metadata-deployment
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      {{- include "metadata.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        # gen3 networkpolicy labels
        netnolimit: 'yes'
        public: 'yes'
        userhelper: 'yes'
      {{- if eq (include "metadata.ddEnabled" . ) "true" }}
        tags.datadoghq.com/service: "guppy"
        # TODO: move this to helpers so we can have this populated from a configmap
        tags.datadoghq.com/env: {{ .Values.dataDog.env }}
        tags.datadoghq.com/version: {{ .Values.image.tag | default .Chart.AppVersion }}
      {{- end }}
        {{- include "metadata.selectorLabels" . | nindent 8 }}
    spec:
      affinity:
        podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - metadata
            topologyKey: "kubernetes.io/hostname"
      automountServiceAccountToken: {{ .Values.automountServiceAccountToken }}
      volumes: 
        - name: config-volume-g3auto
          secret:
            secretName: metadata-g3auto
        - name: config-volume
          secret:
            secretName: metadata-config
            optional: true
        - name: config-manifest
          configMap:
            name: manifest-metadata
            optional: true
      containers:
        - name: {{ .Chart.Name }}
          image: "quay.io/cdis/metadata-service:{{ .Chart.AppVersion }}"
          imagePullPolicy: Always
          env: 
            - name: GEN3_DEBUG
              value: "False"
            - name: GEN3_ES_ENDPOINT
              value: {{ .Values.esEndpoint }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: metadata-dbcreds
                  key: host
                  optional: false  
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: metadata-dbcreds
                  key: username
                  optional: false
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: metadata-dbcreds
                  key: password
                  optional: false
            - name: DB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: metadata-dbcreds
                  key: database
                  optional: false
            {{- with .Values.useAggMds }}
            - name: USE_AGG_MDS
              value: {{ . }}
            {{- end }}
            {{- with .Values.aggMdsNamespace}}
            - name: AGG_MDS_NAMESPACE
              value: {{ . }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /_status
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 30

          readinessProbe:
            httpGet:
              path: /_status
              port: 80
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config-volume-g3auto
              readOnly: true
              mountPath: /src/.env
              subPath: metadata.env
            - name: config-volume
              readOnly: true
              mountPath: /aggregate_config.json
              subPath: aggregate_config.json
            - name: config-manifest
              readOnly: true
              mountPath: /metadata.json
              subPath: json
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      initContainers:
        - name: metadata-db-migrate
          image: "quay.io/cdis/metadata-service:{{ .Chart.AppVersion }}"
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume-g3auto
              readOnly: true
              mountPath: /src/.env
              subPath: metadata.env
          {{- with .Values.initResources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          command: ["/bin/sh"]
          {{- with .Values.args }}
          args: 
            - "-c"
            - |
              /env/bin/alembic upgrade head